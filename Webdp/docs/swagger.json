{
    "swagger": "2.0",
    "info": {
        "description": "Welcome to the official OpenAPI documentation for WebDP, our versatile API designed to provide transparent interoperability with a range of differentially private frameworks.",
        "title": "Webdp API - Reworked",
        "contact": {
            "name": "API Support",
            "url": "http://www.none.com",
            "email": "none@none.com"
        },
        "license": {
            "name": "Mozilla Public License version 2.0",
            "url": "https://www.mozilla.org/en-US/MPL/2.0/"
        },
        "version": "2.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/v1/budget/allocation/{userHandle}/{datasetId}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Gets the specified users budget on a specific dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Gets user budget on a dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Budget"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Adds a user budget on a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Adds a user budget on a dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Budget"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Deletes budget for user and dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Deletes budget for user and dataset.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update a user budget on a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Update a user budget on a dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Budget"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/budget/dataset/{datasetId}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Gets the dataset budget allocation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Gets dataset budget for a dataset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetBudgetAllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/budget/user/{userHandle}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Gets all budgets that are allocated to the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Get budgets for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserBudgetsResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{datasetId}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs role admin or curator, or needs granted access via budget allocation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Gets all datasets which requester has access to.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetInfo"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs to be the owner of the dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Delete a dataset.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update name, owner or total budget of a dataset.\nRequester needs to be curator and owner of the dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Update a dataset.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetCreate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{datasetId}/upload": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs to be the owner of the dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Upload a dataset.",
                "parameters": [
                    {
                        "description": "CSV Data",
                        "name": "csvData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/datasets": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs role admin or curator, or needs granted access via budget allocation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Gets all datasets which requester has access to.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.DatasetInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs role curator. New owner of dataset needs role curator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Creates a dataset.",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Id"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "Login user with user/password credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/logout": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Logout user from session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout User",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/query/accuracy": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Request query accuracy on a specific dataset.\nRequester must be curator or analyst.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Check a query's accuracy",
                "parameters": [
                    {
                        "description": "Query Accuracy Request",
                        "name": "queryAccuracy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QueryAccuracy"
                        }
                    },
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/query/custom": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Custom query on a specific dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Do a custom query (not implemented)",
                "parameters": [
                    {
                        "description": "Query Custom Request",
                        "name": "queryCustom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QueryCustom"
                        }
                    }
                ],
                "responses": {
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/query/evaluate": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Request a query evaluation on a specific dataset.\nRequester must be curator or analyst.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Do a query evaluation",
                "parameters": [
                    {
                        "description": "Query Evaluation Request",
                        "name": "queryEvaluate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QueryEvaluate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.QueryResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/user/{userHandle}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin or curator roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update name, password and roles of a user.\nRequester needs admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin or curator roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user.",
                "parameters": [
                    {
                        "description": "User Request",
                        "name": "userRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserPost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/budgets/allocations/{userHandle}/{datasetId}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Gets the specified users budget on a specific dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Gets user budget on a dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Budget"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Adds a user budget on a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Adds a user budget on a dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Budget"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Deletes budget for user and dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Deletes budget for user and dataset.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update a user budget on a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Update a user budget on a dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Budget"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/budgets/datasets/{datasetId}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Gets the dataset budget allocation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Gets dataset budget for a dataset",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetBudgetAllocationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/budgets/users/{userHandle}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Gets all budgets that are allocated to the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "budgets"
                ],
                "summary": "Get budgets for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserBudgetsResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/datasets": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs role admin or curator, or needs granted access via budget allocation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Gets all datasets which requester has access to.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.DatasetInfo"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs role curator. New owner of dataset needs role curator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Creates a dataset.",
                "parameters": [
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.Id"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/datasets/{datasetId}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs role admin or curator, or needs granted access via budget allocation.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Gets all datasets which requester has access to.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetInfo"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs to be the owner of the dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Delete a dataset.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update name, owner or total budget of a dataset.\nRequester needs to be curator and owner of the dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Update a dataset.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "request body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.DatasetCreate"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/datasets/{datasetId}/upload": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs to be the owner of the dataset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Upload a dataset.",
                "parameters": [
                    {
                        "description": "CSV Data",
                        "name": "csvData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Dataset Id",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/login": {
            "post": {
                "description": "Login user with user/password credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/logout": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Logout user from session.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout User",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/queries/accuracy": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Request query accuracy on a specific dataset.\nRequester must be curator or analyst.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Check a query's accuracy",
                "parameters": [
                    {
                        "description": "Query Accuracy Request",
                        "name": "queryAccuracy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QueryAccuracy"
                        }
                    },
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/queries/docs": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Returns a markdown file with features for each engine\nor single engine if specified in query param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/markdown"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Get engine query documentation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/queries/engines": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Returns a list of available engines.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "List available engines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/queries/evaluate": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Request a query evaluation on a specific dataset.\nRequester must be curator or analyst.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Do a query evaluation",
                "parameters": [
                    {
                        "description": "Query Evaluation Request",
                        "name": "queryEvaluate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QueryEvaluate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.QueryResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/queries/functions": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Returns a json with supported functions for each engine\nor single engine if specified in query param",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "List engine functions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EngineFunctions"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/queries/validate": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Validate a query's syntax.\nRequester must be curator or analyst.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "queries"
                ],
                "summary": "Validate a query",
                "parameters": [
                    {
                        "description": "Query Evaluation Request",
                        "name": "queryEvaluate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.QueryEvaluate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "engine name",
                        "name": "engine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/client.ValidateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/spec": {
            "get": {
                "description": "Returns a html of the API specification, using a Swagger UI.\nSee http://localhost:8000/v2/spec/index.html",
                "tags": [
                    "spec"
                ],
                "summary": "Get OpenAPI Specification",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v2/users": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin or curator roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user.",
                "parameters": [
                    {
                        "description": "User Request",
                        "name": "userRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.UserPost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        },
        "/v2/users/{userHandle}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin or curator roles.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Requester needs admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update name, password and roles of a user.\nRequester needs admin role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User Handle",
                        "name": "userHandle",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "client.ValidateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "entity.Budget": {
            "type": "object",
            "properties": {
                "delta": {
                    "type": "number"
                },
                "epsilon": {
                    "type": "number"
                }
            }
        },
        "entity.ColumnSchema": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/entity.DataType"
                }
            }
        },
        "entity.DataType": {
            "type": "object",
            "properties": {
                "type": {}
            }
        },
        "entity.DatasetBudgetAllocationResponse": {
            "type": "object",
            "properties": {
                "allocated": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "allocation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.UserBudgetModel"
                    }
                },
                "consumed": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "total": {
                    "$ref": "#/definitions/entity.Budget"
                }
            }
        },
        "entity.DatasetCreate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "privacy_notion": {
                    "type": "string"
                },
                "schema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ColumnSchema"
                    }
                },
                "total_budget": {
                    "$ref": "#/definitions/entity.Budget"
                }
            }
        },
        "entity.DatasetInfo": {
            "type": "object",
            "properties": {
                "created_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "loaded": {
                    "type": "boolean"
                },
                "loaded_time": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "privacy_notion": {
                    "type": "string"
                },
                "schema": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ColumnSchema"
                    }
                },
                "total_budget": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "updated_time": {
                    "type": "string"
                }
            }
        },
        "entity.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Query": {
            "type": "object",
            "properties": {
                "querySteps": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "entity.QueryAccuracy": {
            "type": "object",
            "properties": {
                "budget": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "confidence": {
                    "type": "number"
                },
                "dataset": {
                    "type": "integer"
                },
                "query": {
                    "$ref": "#/definitions/entity.Query"
                }
            }
        },
        "entity.QueryCustom": {
            "type": "object",
            "properties": {
                "budget": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "dataset": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "entity.QueryEvaluate": {
            "type": "object",
            "properties": {
                "budget": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "dataset": {
                    "type": "integer"
                },
                "query": {
                    "$ref": "#/definitions/entity.Query"
                }
            }
        },
        "entity.QueryResult": {
            "type": "object",
            "additionalProperties": true
        },
        "entity.UserBudgetModel": {
            "type": "object",
            "properties": {
                "allocated": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "consumed": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "entity.UserBudgetsResponse": {
            "type": "object",
            "properties": {
                "allocated": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "consumed": {
                    "$ref": "#/definitions/entity.Budget"
                },
                "dataset": {
                    "type": "integer"
                }
            }
        },
        "entity.UserPost": {
            "type": "object",
            "properties": {
                "handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity.UserResponse": {
            "type": "object",
            "properties": {
                "created_time": {
                    "type": "string"
                },
                "handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_time": {
                    "type": "string"
                }
            }
        },
        "handlers.TokenResponse": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "response.AllFunctions": {
            "type": "object",
            "properties": {
                "engine1": {
                    "$ref": "#/definitions/response.EngineFunctions"
                },
                "engine2": {
                    "$ref": "#/definitions/response.EngineFunctions"
                }
            }
        },
        "response.EngineFunctions": {
            "type": "object",
            "properties": {
                "feature1": {
                    "$ref": "#/definitions/response.Function"
                },
                "feature2": {
                    "$ref": "#/definitions/response.Function"
                },
                "feature3": {
                    "$ref": "#/definitions/response.Function"
                }
            }
        },
        "response.Error": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.Function": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "optional_fields": {
                    "type": "object",
                    "properties": {
                        "options": {
                            "type": "string"
                        }
                    }
                },
                "required_fields": {
                    "type": "object",
                    "properties": {
                        "options": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "response.Id": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerTokenAuth": {
            "type": "basic"
        }
    }
}